(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{268:function(t,e,r){"use strict";r.r(e);r(40),r(12),r(25),r(42),r(26),r(29),r(43),r(44),r(31),r(36),r(35),r(49),r(30),r(50);var n=r(23),o=(r(263),r(244),r(5)),c=r.n(o),l=r(236),f=r(267),h=(r(39),r(266)),d=r.n(h),y=function(t){return!(isNaN(t)||null==t||null==t||t==1/0||t==-1/0)},m=function(param,t,e,r){return d.a.scale(t).mode("lch")(function(t,e,r){return(t-e)/(r-e)}(param,e,r)).hex()};function v(object,t){var e=Object.keys(object);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(object);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(object,t).enumerable}))),e.push.apply(e,r)}return e}function j(t){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?v(Object(source),!0).forEach((function(e){Object(n.a)(t,e,source[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(source)):v(Object(source)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(source,e))}))}return t}function O(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(!t)return;if("string"==typeof t)return w(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return w(t,e)}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var i=0,n=function(){};return{s:n,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,c=!0,l=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return c=t.done,t},e:function(t){l=!0,o=t},f:function(){try{c||null==r.return||r.return()}finally{if(l)throw o}}}}function w(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,r=new Array(e);i<e;i++)r[i]=t[i];return r}var k=null;function S(t){var e=this,r=t.target;r.setStyle({weight:this.currentStrokeWidth,color:"#".concat(this.currentStrokeColor),dashArray:""}),c.a.Browser.ie||c.a.Browser.opera||r.bringToFront();var n=r.feature.properties,o=this.geojsonData.data.find((function(t){return t[e.idKey]==n[e.geojsonIdKey]}));if(o){var l={name:o[this.titleKey],value:o[this.value.key]};if(this.extraValues){var f,h=[],d=O(this.extraValues);try{for(d.s();!(f=d.n()).done;){var y=f.value;h.push({value:o[y.key],metric:y.metric})}}catch(t){d.e(t)}finally{d.f()}l=j(j({},l),{},{extraValues:h})}this.currentItem=l}else this.currentItem={name:"",value:0}}function I(t){t.target.setStyle({weight:this.strokeWidth,color:"#".concat(this.strokeColor),dashArray:""}),this.currentItem={name:"",value:0}}function x(t){var e=this,r=t.target;null!==k&&(k.setStyle({weight:this.strokeWidth,color:"#".concat(this.strokeColor),dashArray:""}),this.currentItem={name:"",value:0}),r.setStyle({weight:this.currentStrokeWidth,color:"#".concat(this.currentStrokeColor),dashArray:""}),c.a.Browser.ie||c.a.Browser.opera||r.bringToFront();var n=r.feature.properties,o=this.geojsonData.data.find((function(t){return t[e.idKey]==n[e.geojsonIdKey]}));if(o){var l={name:o[this.titleKey],value:o[this.value.key]};if(this.extraValues){var f,h=[],d=O(this.extraValues);try{for(d.s();!(f=d.n()).done;){var y=f.value;h.push({value:o[y.key],metric:y.metric})}}catch(t){d.e(t)}finally{d.f()}l=j(j({},l),{},{extraValues:h})}this.currentItem=l,k=r}else this.currentItem={name:"",value:0}}var A={props:{geojson:Object,data:Array,center:Array,colorScale:Array,titleKey:String,idKey:String,value:Object,extraValues:Array,geojsonIdKey:String,mapStyle:Object,zoom:Number,mapOptions:Object,strokeColor:{type:String,default:"fff"},currentStrokeColor:{type:String,default:"666"},strokeWidth:{type:Number,default:2},currentStrokeWidth:{type:Number,default:5}},mounted:function(){this.$parent._isMounted&&this.deferredMountedTo(this.$parent.mapObject)},data:function(){var t=this;return{currentItem:{name:"",value:0},geojsonOptions:{style:function(e){var r=e.properties[t.geojsonIdKey],n=t.geojsonData.data.find((function(e){return e[t.idKey]==r}));if(!n)return{color:"white",weight:t.strokeWidth};var o=Number(n[t.value.key]);if(!y(o))return{color:"white",weight:t.strokeWidth};var c=t.min,l=t.max;return{weight:t.strokeWidth,opacity:1,color:"#".concat(t.strokeColor),dashArray:"3",fillOpacity:.5,fillColor:m(o,t.colorScale,c,l)}},onEachFeature:function(e,r){r.on({mouseover:S.bind(t),mouseout:I.bind(t),click:x.bind(t)})}}}},computed:{min:function(){return t=this.geojsonData.data,e=this.value.key,Math.min.apply(Math,Object(f.a)(t.filter((function(t){return y(t[e])})).map((function(t){return Number(t[e])}))));var t,e},max:function(){return t=this.geojsonData.data,e=this.value.key,Math.max.apply(Math,Object(f.a)(t.filter((function(t){return y(t[e])})).map((function(t){return Number(t[e])}))));var t,e},geojsonData:function(){return{geojson:j({},this.geojson),data:this.data}}},components:{LGeoJson:l.a},methods:{deferredMountedTo:function(t){this.parent=t;for(var i=0;i<this.$children.length;i++)"function"==typeof this.$children[i].deferredMountedTo&&this.$children[i].deferredMountedTo(t)}}},D=r(38),component=Object(D.a)(A,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",[r("l-geo-json",{ref:"geolayer",attrs:{geojson:t.geojsonData.geojson,options:t.geojsonOptions}}),t._v(" "),t._t("default",null,{currentItem:t.currentItem,unit:t.value.metric,min:t.min,max:t.max})],2)}),[],!1,null,null,null);e.default=component.exports}}]);